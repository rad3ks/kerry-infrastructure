name: 'Terraform'

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      server_name:
        description: 'Server name'
        required: true
        default: 'kerry-staging'
        type: string
      server_type:
        description: 'Server type'
        required: true
        default: 'cpx21'
        type: string

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}

    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_server_name: ${{ github.event.inputs.server_name || (github.ref == 'refs/heads/main' && 'kerry-production' || 'kerry-staging') }}
        TF_VAR_server_type: ${{ github.event.inputs.server_type || 'cx22' }}
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_server_name: ${{ github.event.inputs.server_name || (github.ref == 'refs/heads/main' && 'kerry-production' || 'kerry-staging') }}
        TF_VAR_server_type: ${{ github.event.inputs.server_type || 'cx22' }}
      run: terraform apply -auto-approve -input=false